---

- name: install via package manager
  include_tasks: package_manager.yml
  vars:
    packages: [ leiningen ]
  when: ansible_os_family == "Darwin" or ansible_os_family == "Archlinux"

- name: install via package manager
  include_tasks: package_manager.yml
  vars:
    packages: [ leiningen-clojure ]
  when: ansible_os_family == "Debian"

- name: ensure config directory exists
  file:
    path: "{{ lein_config_dir }}"
    state: directory
  tags: [ config ]

- name: copy config file
  copy:
    src: files/profiles.clj
    dest: "{{ lein_config_dir }}/profiles.clj"
  tags: [ config ]

      # Plug 'clojure-vim/clojure.vim'

- name: add plugins to Neovim
  blockinfile:
    dest: "{{ neovim_plugin_file }}"
    marker: "-- {mark} ANSIBLE BLOCK: Clojure integration"
    block: |4
        -- interactive evaluation
        use {
          'Olical/conjure',
          tag = 'v4.41.0',
        }
        -- utilities for working with s-expressions
        use {
          'guns/vim-sexp',
          {
            'tpope/vim-sexp-mappings-for-regular-people',
            after = 'vim-sexp',
            requires = 'vim-sexp',
          }
        }
    insertbefore: 'end\) -- END plugins'
  tags: [ config, neovim ]
  notify:
    - update Neovim plugins

      #- name: copy plugin config
      #copy:
      #src: files/rust-tools.lua
      #dest: "{{ neovim_plugin_config_dir }}"
      #tags: [ config, neovim ]
      #notify:
      #- update Neovim plugins

- name: copy filetype config 
  copy:
    src: files/ftplugin.vim
    dest: "{{ neovim_config_dir }}/after/ftplugin/clojure.vim"
  tags: [ config, neovim ]

- name: add Clojure source to nvim-cmp config
  blockinfile:
    dest: "{{ neovim_nvim_cmp_config_file }}"
    marker: "-- {mark} ANSIBLE BLOCK: Clojure integration"
    block: |4
                { name = "clojure" },
    insertafter: "sources = {"
  tags: [ config, neovim ]
  notify:
    - update Neovim plugins
