" Plugin manager
call plug#begin()

{% for item in neovim_plugins %}
Plug '{{ item }}'
{% endfor %}
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

call plug#end()

" General settings
set nocompatible   " no old school vi support
set nobackup	   " don't backup edited buffers
set noswapfile	   " don't create a swap file
set autoread       " reload externally edited files
set visualbell 	   " silence beeps
set noerrorbells   " silence beeps
set noshowmode     " hide mode display
set updatetime=100 " reduce default of 4000
set foldmethod=syntax " use syntax to pre-define folds

" Windows / buffers
set hidden     " hide buffers rather than require they are saved or discarded
set splitbelow " open horizontal splits below the current file
set splitright " open vertical splits to the right of the current file

" Searching
set incsearch  " show search matches as they are typed
set ignorecase " ignore case when searching
set smartcase  " make searches case-sensitive when uppercase is used
set nohlsearch " disable search highlighting

" Editing
set number        " enable line numbers
set numberwidth=2 " minimum column width for line number gutter
set cursorline    " highlight the current line
set ruler         " display the cursor position in STATUS bar
set showcmd       " show partial commands in the STATUS bar
set textwidth=0   " don't wrap
set wrapmargin=0  " don't wrap
set scrolloff=12  " number of lines to display either side of the current
set backspace=indent,eol,start " fix backspace

" Indentation
filetype plugin indent on
set shiftwidth=4  " number of spaces to use when indenting in CMD mode
set shiftround    " round to the closest mulitple of shiftwidth in CMD mode
set expandtab     " convert tabs to spaces in INSERT mode
set softtabstop=4 " number of columns a tab uses

" Visual settings
let $NVIM_TUI_ENABLE_TRUE_COLOR=1
if (has("termguicolors"))
    set termguicolors
endif
syntax enable
autocmd BufRead,BufNewFile *.twig set filetype=htmljinja " syntax highlighting for Twig
let s:theme='tender'
let g:ayucolor='light'
let g:gruvbox_contrast_dark='medium'
let g:gruvbox_contrast_light='medium'
let g:lightline = { 'colorscheme': s:theme }
exe 'colorscheme ' . s:theme

" Git gutter
let g:gitgutter_sign_added = '▎'
let g:gitgutter_sign_modified = '▎'
let g:gitgutter_sign_removed = '▎'
let g:gitgutter_sign_removed_first_line = '▎'
let g:gitgutter_sign_modified_removed = '▎'
highlight clear SignColumn
highlight GitGutterAdd ctermfg=148 guifg=#afd700
highlight GitGutterChange ctermfg=74 guifg=#5fafd7
highlight GitGutterDelete ctermfg=167 guifg=#fb4934
highlight link GitGutterChangeDelete GitGutterChange

" Vim Markdown
let g:vim_markdown_folding_disabled=1 " disable folding

" PHP syntax
let g:php_ignore_phpdoc=1

" Clojure Static
let g:clojure_align_multiline_strings=1

" Deoplete
let g:deoplete#enable_at_startup=1
call deoplete#custom#option('max_list', 50)
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" FZF
nnoremap <silent> <C-p> :Files<CR>
nnoremap <silent> <C-o> :Buffer<CR>
nnoremap <silent> <C-i> :Rg<CR>

" Vimwiki
let g:vimwiki_list=[{
    \ 'path': "~/src/zettelkasten",
    \ 'syntax': 'markdown',
    \ 'ext': '.md'
    \ }]

" Zettelkasten
let g:zettel_format="%Y%m%d%H%M%S_%title"
let g:zettel_fzf_command="rg --column --line-number --ignore-case --no-heading --color=always "
let g:zettel_options=[{'front_matter': {'tags': '[]'}}]
